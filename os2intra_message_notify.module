<?php
/**
 * @file
 * Code for the OS2Intra message notify feature.
 */

include_once 'os2intra_message_notify.features.inc';
/**
 * 
 * @author Thomas Thune Hansen <tth@bellcom.dk>
 * @copyright bellcom open source aps
 */

/*
 * Implements hook_menu()
 */
function os2intra_message_notify_menu(){
  $items = array();

  $items['os2intra_message_notify/ajax'] = array(
    'title' => 'os2intra message notify ajax callback',
    'type' => MENU_CALLBACK,
    'page callback' => 'os2intra_message_notify_ajax_callback',
    'access arguments' => array('access content'),
  );

  return $items;
}

/*
 * Implements hook_init()
 */
function os2intra_message_notify_init(){
  global $user;
  if (!path_is_admin(current_path()) && $user->uid) {
    drupal_add_js(drupal_get_path('module', 'os2intra_message_notify') . '/inc/jquery-purr/jquery.purr.js');
    drupal_add_js(drupal_get_path('module', 'os2intra_message_notify') . '/js/purr.js', array('scope' => 'footer'));
    drupal_add_css(drupal_get_path('module', 'os2intra_message_notify') . '/purrcss/purr.css');

    $title = 'en overskrift';
    $message = 'en besked';


    $query = new EntityFieldQuery;

    $result = $query
      ->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'os2intra_message_notification')
      ->execute();

    // Loop over result
    if(isset($result['node'])){
      foreach($result['node'] as $node_info){
        $node = node_load($node_info->nid);

        // Later we save the nids to the _SESSION variable, so that we dont show
        // the messages more than once
        if(isset($_SESSION['os2intra_messages_shown'])){
          if(in_array($node->nid, $_SESSION['os2intra_messages_shown'])){
            continue;
          }
        }
        // Explode date string so we can use it with mktime
        $date_array = explode(' ', $node->field_os2intra_message_enddate[LANGUAGE_NONE][0]['value']);
        $date_array = explode('-', $date_array[0]);
        // Make a timestamp for midnight on the expire date. Makes the expire date work as 
        // "To-And" instead of just "To" date
        if(mktime(23, 59, 00, $date_array[1], $date_array[2], $date_array[0] )> time()){
          $title = $node->title;
          $message = $node->body[LANGUAGE_NONE][0]['value'];
          $sticky = $node->field_os2intra_message_sticky[LANGUAGE_NONE][0]['value'] == 1 ? 'true' :'false';

          // Generate js for the notifier and add it as inline js
          $js = <<<EOF
          var notice = '<div class="notice" data-nid="$node->nid">'
              + '<div class="notice-body">'
                + '<h3 >$title </h3>'
                + '<p> $message </p>'
              + '</div>'
              + '<div class="notice-bottom">'
              + '</div>'
            + '</div>';
            jQuery(notice).purr({isSticky:$sticky});
EOF;

          drupal_add_js($js, array('scope' => 'footer', 'type' => 'inline'));

        }
        else {
          // If the node is expired we just delete it.
          node_delete($node->nid);
        }
      }
    }
  }
}

/*
 * Ajax callback for saving the node id in session variable.
 */
function os2intra_message_notify_ajax_callback($id){
  if(is_numeric($id)){
    $_SESSION['os2intra_messages_shown'][] = $id;
  }
  return TRUE;
}
